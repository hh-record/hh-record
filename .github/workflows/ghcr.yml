name: CI/CD Docker

on:
  push:
    branches:
      - docker
env:
  DOCKER_IMAGE: ghcr.io/hh-record/hh-record
  VERSION: ${{ github.sha }}
  RESOURCE_FILE: src/main/resources

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create aws.yml file
        env:
          AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}
          AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}
        run: |
          echo $RESOURCE_FILE
          echo -e "cloud.aws.credentials.accessKey=$AWS_CREDENTIALS_ACCESS_KEY\ncloud.aws.credentials.secretKey=$AWS_CREDENTIALS_SECRET_KEY" > $RESOURCE_FILE/application-aws.properties

      - name: Create email.yml file
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        run: |
          echo -e "spring.mail.username=$MAIL_USERNAME\nspring.mail.password=$MAIL_PASSWORD" > $RESOURCE_FILE/application-email.properties

      - name: Create google.yml file
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GRANT_TYPE: authorization_code
          BASE_URL: https://www.googleapis.com
          TOKEN_URL: /oauth2/v4/token
          PROFILE_URL: /oauth2/v3/userinfo
        run: |
          echo -e "google.auth.client_id=$CLIENT_ID\ngoogle.auth.client_secret=$CLIENT_SECRET\ngoogle.auth.grant_type=$GRANT_TYPE\ngoogle.auth.base_url=$BASE_URL\ngoogle.auth.token_url=$TOKEN_URL\ngoogle.auth.profile_url=$PROFILE_URL" > $RESOURCE_FILE/application-google.properties

      - name: Create rds.yml file
        env:
          URL: ${{ secrets.URL }}
          DB_USERNAME: ${{ secrets.USERNAME }}
          DB_PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          echo -e "spring.datasource.hikari.jdbc-url=$URL\nspring.datasource.hikari.username=$DB_USERNAME\nspring.datasource.hikari.password=$DB_PASSWORD" > $RESOURCE_FILE/application-rds.properties
          cat $RESOURCE_FILE/application-aws.properties
          cat $RESOURCE_FILE/application-email.properties
          cat $RESOURCE_FILE/application-google.properties
          cat $RESOURCE_FILE/application-rds.properties  

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: hh-record
          password: ${{ secrets.CR_PAT }}

      - name: docker image build and push
        run: |
          docker build -t $DOCKER_IMAGE:$VERSION .
          docker tag $DOCKER_IMAGE:$VERSION $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:$VERSION
          docker push $DOCKER_IMAGE:latest
          echo -e "${{ secrets.CR_PAT }}" > deploy/GIT-TOKEN.txt
          cat deploy/GIT-TOKEN.txt
        

#  deploy:
#    needs: build
#    name: Deploy
#    runs-on: [ self-hosted, label-development ]
#    steps:
#      - name: Login to ghcr
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: hh-record
#          password: ${{ secrets.CR_PAT }}
#      - name: Docker run
#        run: |
#          docker stop hh-record && docker rm -fv hh-record
#          docker run -d -p 8888:8888 --name hh-record --restart always $DOCKER_IMAGE:$VERSION