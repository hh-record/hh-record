name: Deploy hh-record

on:
  push:
    branches:
      - deploy

env:
  RESOURCE_FILE: src/main/resources

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Create aws.yml file
        env:
          AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}
          AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}
        run: |
          echo $RESOURCE_FILE
          echo -e "cloud.aws.credentials.accessKey=$AWS_CREDENTIALS_ACCESS_KEY\ncloud.aws.credentials.secretKey=$AWS_CREDENTIALS_SECRET_KEY" > $RESOURCE_FILE/application-aws.properties

      - name: Create email.yml file
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        run: |
          echo -e "spring.mail.username=$MAIL_USERNAME\nspring.mail.password=$MAIL_PASSWORD" > $RESOURCE_FILE/application-email.properties

      - name: Create google.yml file
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GRANT_TYPE: authorization_code
          BASE_URL: https://www.googleapis.com
          TOKEN_URL: /oauth2/v4/token
          PROFILE_URL: /oauth2/v3/userinfo
        run: |
          echo -e "google.auth.client_id=$CLIENT_ID\ngoogle.auth.client_secret=$CLIENT_SECRET\ngoogle.auth.grant_type=$GRANT_TYPE\ngoogle.auth.base_url=$BASE_URL\ngoogle.auth.token_url=$TOKEN_URL\ngoogle.auth.profile_url=$PROFILE_URL" > $RESOURCE_FILE/application-google.properties

      - name: Create rds.yml file
        env:
          URL: ${{ secrets.URL }}
          DB_USERNAME: ${{ secrets.USERNAME }}
          DB_PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          echo -e "spring.datasource.hikari.jdbc-url=$URL\nspring.datasource.hikari.username=$DB_USERNAME\nspring.datasource.hikari.password=$DB_PASSWORD" > $RESOURCE_FILE/application-rds.properties
          cat $RESOURCE_FILE/application-aws.properties
          cat $RESOURCE_FILE/application-email.properties
          cat $RESOURCE_FILE/application-google.properties
          cat $RESOURCE_FILE/application-rds.properties  

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: clean bootJar
        run: ./gradlew clean bootJar

      - name: copy file
        uses: appleboy/scp-action@master
        with:
          host: 3.36.30.114
          username: ec2-user
          key: ${{ secrets.AWS_PEM_KEY }}
          port: 22
          source: "./build/libs/backend-0.0.1-SNAPSHOT.jar"
          target: "~/app/record-backend/jar"
      - name: ssh
        uses: appleboy/ssh-action@master
        with:
          host: 3.36.30.114
          username: ec2-user
          key: ${{ secrets.AWS_PEM_KEY }}
          port: 22
          script: |
            ~/app/record-backend/shl/startRecordInstance.sh